[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=77",
]

[project]
name = "django-upgrade"
version = "1.28.0"
description = "Automatically upgrade your Django project code."
readme = "README.rst"
keywords = [
  "Django",
]
license = "MIT"
license-files = [ "LICENSE" ]
authors = [
  { name = "Adam Johnson", email = "me@adamj.eu" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django :: 2.2",
  "Framework :: Django :: 3.0",
  "Framework :: Django :: 3.1",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Typing :: Typed",
]
dependencies = [
  "tokenize-rt>=4.1",
]
urls.Changelog = "https://django-upgrade.readthedocs.io/en/latest/changelog.html"
urls.Documentation = "https://django-upgrade.readthedocs.io/"
urls.Funding = "https://adamj.eu/books/"
urls.Repository = "https://github.com/adamchainz/django-upgrade"
scripts.django-upgrade = "django_upgrade.main:main"

[dependency-groups]
test = [
  "coverage[toml]",
  "pytest",
  "pytest-randomly",
  "tokenize-rt",
]

docs = [
  "furo>=2024.8.6",
  "sphinx>=7.4.7",
  "sphinx-build-compatibility",
  "sphinx-copybutton>=0.5.2",
]

[tool.ruff]
lint.select = [
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # pycodestyle
  "E",
  # Pyflakes errors
  "F",
  # isort
  "I",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # pyupgrade
  "UP",
  # Pyflakes warnings
  "W",
]
lint.ignore = [
  # flake8-bugbear opinionated rules
  "B9",
  # line-too-long
  "E501",
  # suppressible-exception
  "SIM105",
  # if-else-block-instead-of-if-exp
  "SIM108",
]
lint.extend-safe-fixes = [
  # non-pep585-annotation
  "UP006",
]
lint.isort.required-imports = [ "from __future__ import annotations" ]

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    """
xfail_strict = true

[tool.coverage.run]
branch = true
parallel = true
source = [
  "django_upgrade",
  "tests",
]

[tool.coverage.paths]
source = [
  "src",
  ".tox/**/site-packages",
]

[tool.coverage.report]
show_missing = true
exclude_also = [
  "if TYPE_CHECKING:",
]

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
mypy_path = "src/"
namespace_packages = false
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.rstcheck]
report_level = "ERROR"

[tool.uv.sources]
sphinx-build-compatibility = { git = "https://github.com/readthedocs/sphinx-build-compatibility", rev = "4f304bd4562cdc96316f4fec82b264ca379d23e0" }
